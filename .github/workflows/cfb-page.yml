name: cfb crawler page
on:
  push:
    paths:
      - ".github/workflows/cfb-page.yml"
#  schedule:
#    - cron: "*/20 * * * *"

jobs:
  step1:
    services:
      database:
        image: mysql:8
        ports: 
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: 1234567
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        channel_id: [25, 143, 230, 229, 58, 77]
    env:
      page_number: 30
      tempspace: tempspace
      tempspace_threads: tempspace/threads
      tempspace_page: tempspace/page
      storage_channel: storage
      storage_channel_threads: storage/threads
      storage_channel_page: storage/page
      channel_page_url: https://raw.githubusercontent.com/shinhwagk/test/cfb-storage@${{matrix.channel_id}}/page
    steps:
      - run: |
          sudo apt-get install -y chromium-browser
          chromium-browser --headless --remote-debugging-port=9222 &
          sleep 5
          l1=`curl -s http://127.0.0.1:9222/json/version | grep 'webSocketDebuggerUrl' | grep -v grep`
          l2=${l1##*/}
          uuid=`echo ${l2:: -1}`
          echo $uuid
          echo ::set-env name=uuid::$uuid
      - run: curl http://127.0.0.1:9222/json/version
      - name: Checkout cfb bin
        uses: actions/checkout@v2
        with:
          path: bin
          ref: "refs/heads/cfb"
      - name: Decrypt cfb bin
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: bin
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - uses: actions/setup-node@v1
      - name: Install Dependencies
        run: npm i puppeteer fs-extra
      - name: Init Tempspace folder,file,page
        run: |
          mkdir -p ${tempspace_threads}
          code=`curl -s -o ${tempspace_page} -w "%{http_code}" ${channel_page_url}`
          echo $code
          [ $code == 404 ] && echo 0 > ${tempspace_page}
          echo ::set-env name=page::`cat ${tempspace_page}`
      - name: crawlar page
        run: |
          set +e
          echo ::set-env name=isNew::${{false}}
          for i in `seq 1 ${page_number}`; do
            echo $page
            node bin/step1.js ${page} ${tempspace_threads}
            if [ $? == 0 ]; then
              echo ::set-env name=isNew::${{true}}
              page=$(($page+1))
              echo ::set-env name=page::$page
            fi
          done
          echo "crawlar page: $page"
          ls ${tempspace_threads}
        env:
          channel_id: ${{ matrix.channel_id }}
      - name: enc tempspace threads
        if: env.isNew == 'true'
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: ${{ env.tempspace_threads }}
          crypto-action: enc
          crypto-password: ${{secrets.cfb_password}}
      - name: Checkout cfb-storage
        if: env.isNew == 'true'
        uses: actions/checkout@v2
        with:
          path: storage
          ref: "refs/heads/cfb-storage@${{matrix.channel_id}}"
      - name: Config Github name & email
        if: env.isNew == 'true'
        run: |
          git config --global user.name ${GITHUB_ACTOR}
          git config --global user.email ${GITHUB_ACTOR}@my-domain.io
      - name: push
        if: env.isNew == 'true'
        run: |
          mkdir -p ${storage_channel_threads}
          cp -r ${tempspace}/* ${storage_channel_threads}/
          savePath=$(($page-5))
          echo ${savePath} > ${storage_channel_page}
          cd storage
          git add -A
          [ `git status -s | wc -l` != 0 ] && \
          git commit -q -m "channel ${{ matrix.channel_id }} page ${page}"
          for i in $(seq 1 5); do
            echo "push start ##########################"
            git push && exit 0 || git pull -q --rebase
            sleep 5
            echo "retry ${i}."
          done
          echo "###################################"
