name: crawlers
on:
 push:
  branches: master
 schedule:
   - cron: '*/2 * * * *'

jobs:
  step1:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel_id: [25, 143, 230]
    steps:
      - uses: actions/checkout@v2
        with:
          path: bin
          ref: 'cfb'
      - uses: actions/checkout@v2
        with:
          path: storage
          ref: 'cfb-storage'
      - uses: actions/setup-node@v1
      - uses: actions/setup-python@v1
      - name: Install Dependencies
        run: |
          npm i -g typescript ts-node
          python -m pip install requests
          npm i puppeteer fs-extra
      - name: init folder and file
        run: chmod +x bin/init.sh; bin/init.sh ${{ matrix.channel_id }}
      - name: dec bin
        uses: shinhwagk/actions-crypto@0.0.7
        with:
          crypto-path: bin
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - name: dec page
        uses: shinhwagk/actions-crypto@master
        with:
         crypto-path: storage/${{ matrix.channel_id }}/page
         crypto-action: dec
         crypto-password: ${{secrets.cfb_password}}
      - name: set page var
        id: setpage
        run: |
          page=$(cat storage/${{ matrix.channel_id }}/page)
          echo ::set-output name=page::$page
      - name: crawlar page
        run: |
          mkdir -p checkpoint/${{ matrix.channel_id }}
          node bin/step1.js ${{ steps.setpage.outputs.page  }} > /dev/null
        env:
          channel_id: ${{ matrix.channel_id }}
      - name: enc checkpoint
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: checkpoint
          crypto-action: enc
          crypto-password: ${{secrets.cfb_password}}
      - name: enc page
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: storage/${{ matrix.channel_id }}/page
          crypto-action: enc
          crypto-password: ${{secrets.cfb_password}}
      - name: push
        run: |
          cp -r checkpoint/* storage/
          cd storage
          git add -A ${{ matrix.channel_id }}
          git config --global user.name ${GITHUB_ACTOR}
          git config --global user.email ${GITHUB_ACTOR}@my-domain.io
          git commit -q -m "c page ${{ steps.setpage.outputs.page }}"
          for i in $(seq 1 5); do
            echo "push start ##########################"
            git push && exit 0 || git pull -q --rebase
            sleep 5
            echo "retry ${i}."
          done
          echo "###################################"
          exit 1
#       - name: enc thread info file
#         run: find checkpoint/ -type f | while read line; do openssl enc -aes256 -k ${{secrets.cfb_password}} -in $line -out "${line}.enc"; rm -f ${line}; done
#       - name: test
#         run: find checkpoint -type f | wc -l
# #       - name: dec thread info file
# #         run: find test/ -type f -name '*.json.enc' | while read line; do openssl enc -d -aes256 -k ${{secrets.cfb_password}} -in $line -out "${line::-4}"; rm -f ${line}; done
#   step2:
#     runs-on: ubuntu-latest
#     steps:
#       - run: openssl -h
