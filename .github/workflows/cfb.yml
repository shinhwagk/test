name: cfb crawlers
on:
  push:
    paths:
      - ".github/workflows/cfb.yml"
#   schedule:
#     - cron: "*/10 * * * *"

jobs:
  step1:
    services:
      database:
        image: mysql:8
        ports: 
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: 123456
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        channel_id: [25, 143, 230, 229]
    env:
      page_number: 30
      tempspace: tempspace
      tempspace_threads: tempspace/threads
      tempspace_page: tempspace/page
      storage_channel: storage
      storage_channel_threads: storage/threads
      storage_channel_page: storage/page
      channel_page_url: https://raw.githubusercontent.com/shinhwagk/test/cfb-storage@${{matrix.channel_id}}/page
    steps:
      - run: |
          sudo apt-get install -y chromium-browser
          chromium-browser --headless --remote-debugging-port=9222 &
          sleep 5
          l1=`curl -s http://127.0.0.1:9222/json/version | grep 'webSocketDebuggerUrl' | grep -v grep`
          l2=${l1##*/}
          uuid=`echo ${l2:: -1}`
          echo $uuid
          echo ::set-env name=uuid::$uuid
      - run: curl http://127.0.0.1:9222/json/version
      - name: Checkout cfb bin
        uses: actions/checkout@v2
        with:
          path: bin
          ref: "refs/heads/cfb"
      - name: Decrypt cfb bin
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: bin
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - uses: actions/setup-node@v1
      - name: Install Dependencies
        run: npm i puppeteer fs-extra
      - name: Init Tempspace folder,file,page
        run: |
          mkdir -p ${tempspace_threads}
          code=`curl -s -o ${tempspace_page} -w "%{http_code}" ${channel_page_url}`
          echo $code
          [ $code == 404 ] && echo 0 > ${tempspace_page}
          echo ::set-env name=page::`cat ${tempspace_page}`
      - name: crawlar page
        run: |
          set +e
          echo ::set-env name=isNew::${{false}}
          for i in `seq 1 ${page_number}`; do
            echo $page
            node bin/step1.js ${page} ${tempspace_threads}
            if [ $? == 0 ]; then
              echo ::set-env name=isNew::${{true}}
              page=$(($page+1))
              echo ::set-env name=page::$page
            fi
          done
          echo "crawlar page: $page"
        env:
          channel_id: ${{ matrix.channel_id }}
      - name: enc tempspace threads
        if: env.isNew == 'true'
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: ${{ env.tempspace_threads }}
          crypto-action: enc
          crypto-password: ${{secrets.cfb_password}}
      - name: Checkout cfb-storage
        if: env.isNew == 'true'
        uses: actions/checkout@v2
        with:
          path: storage
          ref: "refs/heads/cfb-storage@${{matrix.channel_id}}"
      - name: Config Github name & email
        if: env.isNew == 'true'
        run: |
          git config --global user.name ${GITHUB_ACTOR}
          git config --global user.email ${GITHUB_ACTOR}@my-domain.io
      - name: push
        if: env.isNew == 'true'
        run: |
          mkdir -p ${storage_channel_threads}
          cp -r ${tempspace}/* ${storage_channel_threads}/
          echo ${page} > ${storage_channel_page}
          cd storage
          git add -A
          [ `git status -s | wc -l` != 0 ] && \
          git commit -q -m "channel ${{ matrix.channel_id }} page ${page}"
          for i in $(seq 1 5); do
            echo "push start ##########################"
            git push && exit 0 || git pull -q --rebase
            sleep 5
            echo "retry ${i}."
          done
          echo "###################################"
  step2:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        channel_id: [25, 143, 230, 229]
    env:
      thread_number: 100
      tempspace: tempspace
      tempspace_threads: tempspace/threads
      storage_channel: storage
      storage_channel_threads: storage/threads
      storage_channel_threads_success: storage/threads_success
      storage_channel_threads_error: storage/threads_error
    steps:
      - run: |
          sudo apt-get install -y chromium-browser
          chromium-browser --headless --remote-debugging-port=9222 &
          sleep 5
          l1=`curl -s http://127.0.0.1:9222/json/version | grep 'webSocketDebuggerUrl' | grep -v grep`
          l2=${l1##*/}
          uuid=`echo ${l2:: -1}`
          echo $uuid
          echo ::set-env name=uuid::$uuid
      - uses: actions/checkout@v2
        with:
          path: bin
          ref: "refs/heads/cfb"
      - uses: actions/checkout@v2
        with:
          path: storage
          ref: "refs/heads/cfb-storage@${{matrix.channel_id}}"
      - uses: actions/setup-node@v1
      - name: Install Dependencies
        run: |
          npm i -g typescript ts-node
          npm i puppeteer fs-extra got
      - name: dec bin
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: bin
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - name: Init Tempspace folder,file,page
        id: init
        run: |
          mkdir -p ${tempspace_threads} ${storage_channel_threads_success} ${storage_channel_threads_error}
          find ${storage_channel_threads} -type f | sort -r | head -n ${thread_number} | while read thread_file; do
            meta_file=`basename ${thread_file}`
            thread_id=${meta_file::-9}
            mkdir -p "${tempspace_threads}/${thread_id}"
          done
          ls -l ${tempspace_threads}
      - name: dec tempspace threads
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: ${{env.tempspace_threads}}
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - name: Crawlar Threads
        run: |
          ls -l ${tempspace_threads}
          set +e
          function c_thread() {
            thread_folder=${1}
            tid=${thread_folder##*/}
            echo "$tid $thread_folder `pwd`"
            startT=`date +%s`
            node bin/step2.js $tid $thread_folder
            RC=$?
            if [ $RC == 0 ]; then
              rm -fr ${storage_channel_threads}/${tid}.json.enc
              endT=`date +%s`
              echo "${tid} success."
              echo "push time $(($endT-$startT))"
            fi
            if [ $RC == 127 ]; then
              echo "$tid error 127"
              mv ${storage_channel_threads}/${tid}.json.enc ${storage_channel_threads_error}/
            fi          
          }
          while read thread_folder; do
            c_thread $thread_folder &
          done <<< `find ${tempspace_threads} -maxdepth 1 -type d ! -path ${tempspace_threads}`
          wait;
        env:
          channel_id: ${{ matrix.channel_id }}
      - name: enc tempspace_threads
        if: success() || cancelled()
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: ${{env.tempspace_threads}}
          crypto-action: enc
          crypto-password: ${{secrets.cfb_password}}
      - name: Config Github name & email
        if: success() || cancelled()
        run: |
          git config --global user.name ${GITHUB_ACTOR}
          git config --global user.email ${GITHUB_ACTOR}@my-domain.io
      - name: push
        if: success() || cancelled()
        run: |
          mkdir -p ${storage_channel_threads_success}
          cp -r ${tempspace_threads}/* ${storage_channel_threads_success}/ && cd storage
          git add -A
          [ `git status -s | wc -l` != 0 ] && \
          git commit -q -m "channel ${{ matrix.channel_id }} threads ${thread_number}"
          for i in $(seq 1 5); do
            git push && exit 0 || git pull -q --rebase || echo 'retry'
            sleep 5
            echo "retry ${i}."
          done
  step3:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        channel_id: [25, 143, 230, 229]
    env:
      push_number: 30
      tempspace: tempspace
      storage_channel_threads_success: storage/threads_success
    steps:
      - uses: actions/checkout@v2
        with:
          path: bin
          ref: "refs/heads/cfb"
      - uses: actions/checkout@v2
        with:
          path: storage
          ref: "refs/heads/cfb-storage@${{matrix.channel_id}}"
      - run: cd storage; ls -lah ;git log;
      - uses: actions/setup-python@v1
      - run: pip install requests
      - name: dec bin
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: bin
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - name: Init Tempspace folder,file,page
        run: |
          mkdir ${tempspace}
          find ${storage_channel_threads_success} -type d ! -path ${storage_channel_threads_success} | head -n ${push_number} | xargs -i cp -r {} ${tempspace}/
      - name: dec tempspace
        uses: shinhwagk/actions-crypto@master
        with:
          crypto-path: ${{ env.tempspace }}
          crypto-action: dec
          crypto-password: ${{secrets.cfb_password}}
      - name: push drive
        run: |
          function push_drive() {
            rfpath=`dirname ${1}`; thread_id=${rfpath##*/}; file_name=`basename $1`
            echo "push args: ${{matrix.channel_id}} ${thread_id} ${1}"
            python ./bin/push.py ${{matrix.channel_id}} ${thread_id} "${1}"
          }
          parl=0
          while read rawfile; do
            let parl+=1
            source_file=${rawfile/$tempspace/$storage_channel_threads_success}
            echo $source_file
            push_drive $rawfile && rm -f "${source_file}.enc" &
            if [ $parl == 10 ]; then
              wait; parl=0; sleep 1;
            fi
          done <<< `find ${tempspace} -type f`
          wait
      - name: Config Github name & email
        if: success() || cancelled()
        run: |
          git config --global user.name ${GITHUB_ACTOR}
          git config --global user.email ${GITHUB_ACTOR}@my-domain.io
      - name: push
        if: success() || cancelled()
        run: |
          cd storage;
          git add -A
          git status -s
          [ `git status -s | wc -l` != 0 ] && \
          git commit -q -m "channel ${{ matrix.channel_id }} push ${push_number}"
          for i in $(seq 1 5); do
            git push && exit 0 || git pull -q --rebase
            sleep 5
            echo "retry ${i}."
          done
